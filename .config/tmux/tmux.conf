
# Sets

# Get true color working with tmux
set  -g  default-terminal   "xterm-256color"

# Get italics to work
set  -ag terminal-overrides ",xterm-256color:RGB"

# Fix slow esc when using vim (r/vim/comments/40257u/comment/cyqw4k2/)
set  -s  escape-time        0

# Prevent renamed windows from changing their names
set  -g  allow-rename       off

# Start windows and panes at 1, not 0
set  -g  base-index         1
setw -g  pane-base-index    1

# Allow mouse control
set  -g  mouse              on

set -g clock-mode-style 12

# Move windows across tabs
bind-key S command-prompt -p "bring pane from:" "join-pane -s '%%'"
bind-key s command-prompt -p "send pane to:" "join-pane -s '%%'"

# vim-like copy and paste
setw -g mode-keys vi
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind P paste-buffer
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"


# Bindings

# Change the prefix
unbind C-b
set    -g  prefix       C-a
bind   C-a send-prefix

# Create splits intuitively
bind-key -n 'M-\' split-window -h
bind-key -n 'M--' split-window -v

# Close pane
bind-key -n 'M-d' killp

# Toggle zoom
# bind-key -n 'M-z' resize-pane -Z \; set -g status

# Go to window
bind-key -n 'M-1' if-shell 'tmux select-window -t :1' '' 'new-window -t :1'
bind-key -n 'M-2' if-shell 'tmux select-window -t :2' '' 'new-window -t :2'
bind-key -n 'M-3' if-shell 'tmux select-window -t :3' '' 'new-window -t :3'
bind-key -n 'M-4' if-shell 'tmux select-window -t :4' '' 'new-window -t :4'
bind-key -n 'M-5' if-shell 'tmux select-window -t :5' '' 'new-window -t :5'
bind-key -n 'M-6' if-shell 'tmux select-window -t :6' '' 'new-window -t :6'
bind-key -n 'M-7' if-shell 'tmux select-window -t :7' '' 'new-window -t :7'
bind-key -n 'M-8' if-shell 'tmux select-window -t :8' '' 'new-window -t :8'
bind-key -n 'M-9' if-shell 'tmux select-window -t :9' '' 'new-window -t :9'
bind-key -n 'M-0' if-shell 'tmux select-window -t :0' '' 'new-window -t :10'

# Move pane to window, creating the window if necessary
bind-key -n 'M-!' if-shell 'tmux select-window -t :1' 'joinp -t :1' 'breakp -d -t :1'
bind-key -n 'M-@' if-shell 'tmux select-window -t :2' 'joinp -t :2' 'breakp -d -t :2'
bind-key -n 'M-#' if-shell 'tmux select-window -t :3' 'joinp -t :3' 'breakp -d -t :3'
bind-key -n 'M-$' if-shell 'tmux select-window -t :4' 'joinp -t :4' 'breakp -d -t :4'
bind-key -n 'M-%' if-shell 'tmux select-window -t :5' 'joinp -t :5' 'breakp -d -t :5'
bind-key -n 'M-^' if-shell 'tmux select-window -t :6' 'joinp -t :6' 'breakp -d -t :6'
bind-key -n 'M-&' if-shell 'tmux select-window -t :7' 'joinp -t :7' 'breakp -d -t :7'
bind-key -n 'M-*' if-shell 'tmux select-window -t :8' 'joinp -t :8' 'breakp -d -t :8'
bind-key -n 'M-(' if-shell 'tmux select-window -t :9' 'joinp -t :9' 'breakp -d -t :9'
bind-key -n 'M-)' if-shell 'tmux select-window -t :0' 'joinp -t :0' 'breakp -d -t :0'

bind -n 'M-H' splitw -fhb \; swapp -t ! \; killp -t !
bind -n 'M-L' splitw -fh  \; swapp -t ! \; killp -t !
bind -n 'M-J' splitw -fv  \; swapp -t ! \; killp -t !
bind -n 'M-K' splitw -fvb \; swapp -t ! \; killp -t !

bind -n 'M-o' popup -E 'open $(fd . . | fzf)'
bind -n 'M-O' popup -E 'open $(fd . $HOME | fzf)'


# bind-key -n ^[{ swap-pane -U
# bind-key -n ^}] swap-pane -D

unbind '"'
unbind %


# Styling

set -g status-style                 "fg=white align=centre bg=brightwhite"
set -g status-position              "bottom"
set -g pane-border-lines            single

set -g status-left                  "#{session_name}:  "
set -g status-left-length           50
set -g status-left-style            "bg=brightwhite"

# for use with alt-* bindings (no leader key)
set -g window-status-format         " #I: #W "
set -g window-status-current-format "[#I: #W]"

# # For use with leader key (default TMUX behavior)
# set -g window-status-format         "#{?client_prefix,#I#[fg=black]#W#[fg=default],#W }"
# set -g window-status-current-format "#[underscore]#{?client_prefix,#I#[fg=black]#W#[fg=default],#W#[nounderscore] }"

set -g window-status-activity-style "fg=yellow"
set -g window-status-bell-style     "fg=yellow"

set -g status-right                 ""

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator


is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h'  'select-pane -L'
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j'  'select-pane -D'
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k'  'select-pane -U'
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l'  'select-pane -R'
# bind-key -n 'M-\' if-shell "$is_vim" 'send-keys M-\'  'select-pane -l'

# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?)(diff)?$'"
# bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h'  'select-pane -L'
# bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j'  'select-pane -D'
# bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k'  'select-pane -U'
# bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l'  'select-pane -R'
# tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
# if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
# if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
bind-key -T copy-mode-vi 'M-h' select-pane -L
bind-key -T copy-mode-vi 'M-j' select-pane -D
bind-key -T copy-mode-vi 'M-k' select-pane -U
bind-key -T copy-mode-vi 'M-l' select-pane -R
bind-key -T copy-mode-vi 'M-\' select-pane -l

bind-key -n 'M-z' if-shell "$is_vim" 'send-keys Space z ; resize-pane -Z' 'resize-pane -Z'
bind-key -n 'M-z' resize-pane -Z
